DROP TABLE IF EXISTS CABINETS CASCADE;
DROP TABLE IF EXISTS SEGMENT_CTRL CASCADE;
DROP TABLE IF EXISTS FIXTURES CASCADE;
DROP TABLE IF EXISTS DRIVERS CASCADE;
DROP TABLE IF EXISTS SENSORS CASCADE;
DROP TABLE IF EXISTS SENSORS_DATA CASCADE;
DROP TABLE IF EXISTS ERRORS CASCADE;


CREATE TABLE CABINETS
(
  ID SERIAL NOT NULL
, LOCATION_ID BIGINT NOT NULL
, NUMBER VARCHAR NOT NULL
);

ALTER TABLE CABINETS ADD CONSTRAINT PK_CABINETS
	PRIMARY KEY (ID)
;

CREATE TABLE SEGMENT_CTRL
(
  ID SERIAL NOT NULL
, CABINET_ID BIGINT NOT NULL
, FIRMWARE VARCHAR
, PRODUCT_CODE VARCHAR
, NUMBER VARCHAR 
);

ALTER TABLE SEGMENT_CTRL ADD CONSTRAINT PK_SEGMENT_CTRL
	PRIMARY KEY (ID)
;
ALTER TABLE SEGMENT_CTRL  ADD CONSTRAINT FK_SEGMENT_CTRL_CABINET 
	FOREIGN KEY (CABINET_ID) REFERENCES CABINETS (ID) ON DELETE CASCADE
;


CREATE TABLE FIXTURES
(
  ID SERIAL NOT NULL
, SEGMENT_CTRL_ID BIGINT NOT NULL
, LOCATION_ID BIGINT NOT NULL
, ACTUAL_STATE VARCHAR
, DIM_LEVEL VARCHAR
, HOURS_ON VARCHAR
, TIME_OF_LAST_SWITCH_ON TIMESTAMP
, TIME_OF_LAST_SWITCH_OFF TIMESTAMP
, HID_STATUS VARCHAR
, DEVICE_TYPE VARCHAR
, BALLASTS_AND_WORK_TYPE VARCHAR
, VOLTAGE_RESET VARCHAR
, MIN_DIM_LEVEL VARCHAR
);

ALTER TABLE FIXTURES ADD CONSTRAINT PK_FIXTURES
	PRIMARY KEY (ID)
;
ALTER TABLE FIXTURES  ADD CONSTRAINT FK_FIXTURES_SEGMENT_CTRL
	FOREIGN KEY (SEGMENT_CTRL_ID) REFERENCES SEGMENT_CTRL (ID) ON DELETE CASCADE
;

CREATE TABLE DRIVERS
(
  ID SERIAL NOT NULL
, FIXTURE_ID BIGINT NOT NULL
, temperature VARCHAR
, connection_quality VARCHAR
, system_time TIMESTAMP
, power_usage VARCHAR
, voltage VARCHAR
, current VARCHAR
, power VARCHAR
, cos_value VARCHAR
, zigbee_address VARCHAR
, firmware VARCHAR
, serial_number VARCHAR
, product_type VARCHAR
, deployment_date TIMESTAMP
, net_state VARCHAR
, data_acceptance_state VARCHAR
, parametrization_state VARCHAR
, data_searching_state VARCHAR
);

ALTER TABLE DRIVERS ADD CONSTRAINT PK_DRIVERS
	PRIMARY KEY (ID)
;
ALTER TABLE DRIVERS  ADD CONSTRAINT FK_DRIVERS_FIXTURES
	FOREIGN KEY (FIXTURE_ID) REFERENCES FIXTURES (ID) ON DELETE CASCADE
;

CREATE TABLE SENSORS
(
  ID SERIAL NOT NULL
, SEGMENT_CTRL_ID BIGINT 
, LOCATION_ID BIGINT NOT NULL
, SENSOR_TYPE_ID BIGINT NOT NULL
);


ALTER TABLE SENSORS ADD CONSTRAINT PK_SENSORS
	PRIMARY KEY (ID)
;
ALTER TABLE SENSORS  ADD CONSTRAINT FK_SENSORS_SEGMENT_CTRL
	FOREIGN KEY (SEGMENT_CTRL_ID) REFERENCES SEGMENT_CTRL (ID) ON DELETE CASCADE
;

CREATE TABLE SENSORS_DATA 
(
  ID SERIAL NOT NULL
, SENSOR_ID BIGINT NOT NULL
, KEY VARCHAR NOT NULL
, VALUE VARCHAR NOT NULL
);

ALTER TABLE SENSORS_DATA ADD CONSTRAINT PK_SENSORS_DATA
	PRIMARY KEY (ID)
;
ALTER TABLE SENSORS_DATA ADD CONSTRAINT FK_SENSORS_DATA_SENSORS
	FOREIGN KEY (SENSOR_ID) REFERENCES SENSORS (ID) ON DELETE CASCADE
;

CREATE TABLE ERRORS
(
  ID SERIAL NOT NULL
, FIXTURE_ID BIGINT
, DRIVER_ID BIGINT
, TIMESTAMP TIMESTAMP WITH TIME ZONE
, ERROR_TYPE VARCHAR
);

ALTER TABLE ERRORS ADD CONSTRAINT PK_ERRORS
	PRIMARY KEY (ID)
;
ALTER TABLE ERRORS  ADD CONSTRAINT FK_ERRORS_FIXTURES
	FOREIGN KEY (FIXTURE_ID) REFERENCES FIXTURES (ID) ON DELETE CASCADE
;
ALTER TABLE ERRORS  ADD CONSTRAINT FK_ERRORS_DRIVERS
	FOREIGN KEY (DRIVER_ID) REFERENCES DRIVERS (ID) ON DELETE CASCADE
;
